"""add_institution_matches_table

Revision ID: fab5c303219e
Revises: 8e1e010606de
Create Date: 2025-09-29 04:21:40.804055

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'fab5c303219e'
down_revision: Union[str, None] = '8e1e010606de'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('institution_matches',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('institution_id', sa.Integer(), nullable=False),
    sa.Column('match_score', sa.Float(), nullable=False),
    sa.Column('match_reasons', sa.JSON(), nullable=True),
    sa.Column('mismatch_reasons', sa.JSON(), nullable=True),
    sa.Column('interested', sa.Boolean(), nullable=True),
    sa.Column('applied', sa.Boolean(), nullable=True),
    sa.Column('admitted', sa.Boolean(), nullable=True),
    sa.Column('enrolled', sa.Boolean(), nullable=True),
    sa.Column('visited', sa.Boolean(), nullable=True),
    sa.Column('application_status', sa.String(length=50), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('match_date', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['institution_id'], ['institutions.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_institution_matches_id'), 'institution_matches', ['id'], unique=False)
    op.create_index(op.f('ix_institution_matches_institution_id'), 'institution_matches', ['institution_id'], unique=False)
    op.create_index(op.f('ix_institution_matches_user_id'), 'institution_matches', ['user_id'], unique=False)
    op.alter_column('user_profiles', 'profile_tier',
               existing_type=postgresql.ENUM('basic', 'enhanced', 'complete', 'optimized', name='profiletier'),
               type_=sa.String(length=20),
               existing_nullable=False,
               existing_server_default=sa.text("'basic'::profiletier"))
    op.create_index(op.f('ix_user_profiles_household_income_range'), 'user_profiles', ['household_income_range'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_user_profiles_household_income_range'), table_name='user_profiles')
    op.alter_column('user_profiles', 'profile_tier',
               existing_type=sa.String(length=20),
               type_=postgresql.ENUM('basic', 'enhanced', 'complete', 'optimized', name='profiletier'),
               existing_nullable=False,
               existing_server_default=sa.text("'basic'::profiletier"))
    op.drop_index(op.f('ix_institution_matches_user_id'), table_name='institution_matches')
    op.drop_index(op.f('ix_institution_matches_institution_id'), table_name='institution_matches')
    op.drop_index(op.f('ix_institution_matches_id'), table_name='institution_matches')
    op.drop_table('institution_matches')
    # ### end Alembic commands ###
